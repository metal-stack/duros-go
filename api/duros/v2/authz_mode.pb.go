// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: lightbits/api/duros/v2/authz_mode.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthorizationMode int32

const (
	// 0
	//
	// Unknown authorization mode. This is for internal use only.
	AuthorizationMode_UnknownAuthzMode AuthorizationMode = 0
	// 1
	//
	// Application authorization mode. In this mode, the client ID in the access token,
	//
	//	is first looked up for a matching IdP client configuration. If found. The client ID is mapped to a
	//	a matching Auth Map Entry that will return the correct scope and role. If no match is found, an error is returned.
	AuthorizationMode_App AuthorizationMode = 1
	// 2
	//
	// User authorization mode. In this mode, the client ID in the access token,
	//
	//	is first looked up for a matching IdP client configuration. If found. The value in field in
	//	specified by claim name is looked up for a matching Auth Map Entry that will return correct scope and role.
	//	If no match is found, an error is returned.
	AuthorizationMode_User AuthorizationMode = 2
	// 3
	//
	// Converge authorization mode. In this mode, the client ID in access token,
	//
	//	is first looked up for a matching IdP client configuration. If no match is found,
	//	the value of the access token field specified by claim name is looked up for a matching Auth Map Entry that will
	//	return a correct scope and role.
	//	Only a single IdP client configuration using AuthorizationMode = Converge is allowed.
	//	The clientID value for an IdPClientConf using Converge mode must be set to NOT_APPLICABLE.
	AuthorizationMode_Converge AuthorizationMode = 3
)

// Enum value maps for AuthorizationMode.
var (
	AuthorizationMode_name = map[int32]string{
		0: "UnknownAuthzMode",
		1: "App",
		2: "User",
		3: "Converge",
	}
	AuthorizationMode_value = map[string]int32{
		"UnknownAuthzMode": 0,
		"App":              1,
		"User":             2,
		"Converge":         3,
	}
)

func (x AuthorizationMode) Enum() *AuthorizationMode {
	p := new(AuthorizationMode)
	*p = x
	return p
}

func (x AuthorizationMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthorizationMode) Descriptor() protoreflect.EnumDescriptor {
	return file_lightbits_api_duros_v2_authz_mode_proto_enumTypes[0].Descriptor()
}

func (AuthorizationMode) Type() protoreflect.EnumType {
	return &file_lightbits_api_duros_v2_authz_mode_proto_enumTypes[0]
}

func (x AuthorizationMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthorizationMode.Descriptor instead.
func (AuthorizationMode) EnumDescriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_authz_mode_proto_rawDescGZIP(), []int{0}
}

var File_lightbits_api_duros_v2_authz_mode_proto protoreflect.FileDescriptor

const file_lightbits_api_duros_v2_authz_mode_proto_rawDesc = "" +
	"\n" +
	"'lightbits/api/duros/v2/authz_mode.proto\x12\x16lightbits.api.duros.v2*J\n" +
	"\x11AuthorizationMode\x12\x14\n" +
	"\x10UnknownAuthzMode\x10\x00\x12\a\n" +
	"\x03App\x10\x01\x12\b\n" +
	"\x04User\x10\x02\x12\f\n" +
	"\bConverge\x10\x03B\rZ\vduros/v2;v2b\x06proto3"

var (
	file_lightbits_api_duros_v2_authz_mode_proto_rawDescOnce sync.Once
	file_lightbits_api_duros_v2_authz_mode_proto_rawDescData []byte
)

func file_lightbits_api_duros_v2_authz_mode_proto_rawDescGZIP() []byte {
	file_lightbits_api_duros_v2_authz_mode_proto_rawDescOnce.Do(func() {
		file_lightbits_api_duros_v2_authz_mode_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lightbits_api_duros_v2_authz_mode_proto_rawDesc), len(file_lightbits_api_duros_v2_authz_mode_proto_rawDesc)))
	})
	return file_lightbits_api_duros_v2_authz_mode_proto_rawDescData
}

var file_lightbits_api_duros_v2_authz_mode_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_lightbits_api_duros_v2_authz_mode_proto_goTypes = []any{
	(AuthorizationMode)(0), // 0: lightbits.api.duros.v2.AuthorizationMode
}
var file_lightbits_api_duros_v2_authz_mode_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_lightbits_api_duros_v2_authz_mode_proto_init() }
func file_lightbits_api_duros_v2_authz_mode_proto_init() {
	if File_lightbits_api_duros_v2_authz_mode_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lightbits_api_duros_v2_authz_mode_proto_rawDesc), len(file_lightbits_api_duros_v2_authz_mode_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lightbits_api_duros_v2_authz_mode_proto_goTypes,
		DependencyIndexes: file_lightbits_api_duros_v2_authz_mode_proto_depIdxs,
		EnumInfos:         file_lightbits_api_duros_v2_authz_mode_proto_enumTypes,
	}.Build()
	File_lightbits_api_duros_v2_authz_mode_proto = out.File
	file_lightbits_api_duros_v2_authz_mode_proto_goTypes = nil
	file_lightbits_api_duros_v2_authz_mode_proto_depIdxs = nil
}
