// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: lightbits/api/duros/v2/cf.proto

package v2

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The connection status of the cluster.
type Cluster_ClusterStatus int32

const (
	Cluster_Connected    Cluster_ClusterStatus = 0
	Cluster_Disconnected Cluster_ClusterStatus = 1
	Cluster_Unauthorized Cluster_ClusterStatus = 2
)

// Enum value maps for Cluster_ClusterStatus.
var (
	Cluster_ClusterStatus_name = map[int32]string{
		0: "Connected",
		1: "Disconnected",
		2: "Unauthorized",
	}
	Cluster_ClusterStatus_value = map[string]int32{
		"Connected":    0,
		"Disconnected": 1,
		"Unauthorized": 2,
	}
)

func (x Cluster_ClusterStatus) Enum() *Cluster_ClusterStatus {
	p := new(Cluster_ClusterStatus)
	*p = x
	return p
}

func (x Cluster_ClusterStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cluster_ClusterStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_lightbits_api_duros_v2_cf_proto_enumTypes[0].Descriptor()
}

func (Cluster_ClusterStatus) Type() protoreflect.EnumType {
	return &file_lightbits_api_duros_v2_cf_proto_enumTypes[0]
}

func (x Cluster_ClusterStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cluster_ClusterStatus.Descriptor instead.
func (Cluster_ClusterStatus) EnumDescriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{8, 0}
}

type Workflow_WorkflowState int32

const (
	Workflow_PENDING   Workflow_WorkflowState = 0
	Workflow_RUNNING   Workflow_WorkflowState = 1
	Workflow_COMPLETED Workflow_WorkflowState = 2
	Workflow_FAILED    Workflow_WorkflowState = 3
)

// Enum value maps for Workflow_WorkflowState.
var (
	Workflow_WorkflowState_name = map[int32]string{
		0: "PENDING",
		1: "RUNNING",
		2: "COMPLETED",
		3: "FAILED",
	}
	Workflow_WorkflowState_value = map[string]int32{
		"PENDING":   0,
		"RUNNING":   1,
		"COMPLETED": 2,
		"FAILED":    3,
	}
)

func (x Workflow_WorkflowState) Enum() *Workflow_WorkflowState {
	p := new(Workflow_WorkflowState)
	*p = x
	return p
}

func (x Workflow_WorkflowState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Workflow_WorkflowState) Descriptor() protoreflect.EnumDescriptor {
	return file_lightbits_api_duros_v2_cf_proto_enumTypes[1].Descriptor()
}

func (Workflow_WorkflowState) Type() protoreflect.EnumType {
	return &file_lightbits_api_duros_v2_cf_proto_enumTypes[1]
}

func (x Workflow_WorkflowState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Workflow_WorkflowState.Descriptor instead.
func (Workflow_WorkflowState) EnumDescriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{12, 0}
}

// Login Request
//
// Request to login to the CF service.
type CFLoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CFLoginRequest) Reset() {
	*x = CFLoginRequest{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CFLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CFLoginRequest) ProtoMessage() {}

func (x *CFLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CFLoginRequest.ProtoReflect.Descriptor instead.
func (*CFLoginRequest) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{0}
}

// Login Response
//
// The response to the login to the CF service.
type CFLoginResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of token.
	TokenType string `protobuf:"bytes,1,opt,name=tokenType,proto3" json:"tokenType,omitempty"`
	// The time in seconds when the token will expire.
	ExpiresIn uint64 `protobuf:"varint,2,opt,name=expiresIn,proto3" json:"expiresIn,omitempty"`
	// The ID of the token.
	IdToken       string `protobuf:"bytes,3,opt,name=idToken,proto3" json:"idToken,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CFLoginResponse) Reset() {
	*x = CFLoginResponse{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CFLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CFLoginResponse) ProtoMessage() {}

func (x *CFLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CFLoginResponse.ProtoReflect.Descriptor instead.
func (*CFLoginResponse) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{1}
}

func (x *CFLoginResponse) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *CFLoginResponse) GetExpiresIn() uint64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *CFLoginResponse) GetIdToken() string {
	if x != nil {
		return x.IdToken
	}
	return ""
}

// Attach Cluster Request
//
// Request to attach a cluster to the CF service.
type AttachClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Management API endpoint of the cluster to connect to. Any one of the API endpoints can be used
	// must be of the form `<host>:<port>`, e.g.: `10.0.0.1:443`, `foo.bar.com:443`.
	ApiEndpoint   string `protobuf:"bytes,1,opt,name=apiEndpoint,proto3" json:"apiEndpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachClusterRequest) Reset() {
	*x = AttachClusterRequest{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachClusterRequest) ProtoMessage() {}

func (x *AttachClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachClusterRequest.ProtoReflect.Descriptor instead.
func (*AttachClusterRequest) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{2}
}

func (x *AttachClusterRequest) GetApiEndpoint() string {
	if x != nil {
		return x.ApiEndpoint
	}
	return ""
}

// Attach Cluster Response
//
// Response to attach a Lightbits cluster to the CF service.
// ListWorkflows API and the returned workflow ID can be used to track the status of this operation.
type AttachClusterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflowId,proto3" json:"workflowId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachClusterResponse) Reset() {
	*x = AttachClusterResponse{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachClusterResponse) ProtoMessage() {}

func (x *AttachClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachClusterResponse.ProtoReflect.Descriptor instead.
func (*AttachClusterResponse) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{3}
}

func (x *AttachClusterResponse) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

// Get Service Credentials Request
//
// Request to get the service credentials for the CF service.
type GetCFServiceCredentialsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCFServiceCredentialsRequest) Reset() {
	*x = GetCFServiceCredentialsRequest{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCFServiceCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCFServiceCredentialsRequest) ProtoMessage() {}

func (x *GetCFServiceCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCFServiceCredentialsRequest.ProtoReflect.Descriptor instead.
func (*GetCFServiceCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{4}
}

// Get Service Credentials Response
//
// The response to get the service credentials for the CF service.
type GetCFServiceCredentialsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The key ID to be used while importing the public key into the Lightbits cluster.
	PubKeyId string `protobuf:"bytes,1,opt,name=pubKeyId,proto3" json:"pubKeyId,omitempty"`
	// The base64-encoded public key to be imported into the Lightbits cluster.
	//
	// After Base64 decoding, the contents should be saved as a file (e.g. into <FILE_PATH>) and
	// passed as an argument to the following command to the corresponding Lightbits cluster, with
	// <FILE_PATH> and <PUB_KEY_ID> substituted as appropriate.
	//
	//	lbcli create credential --project-name=system --id=<PUB_KEY_ID> --type=rsa256pubkey <FILE_PATH>
	PubKey        string `protobuf:"bytes,2,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCFServiceCredentialsResponse) Reset() {
	*x = GetCFServiceCredentialsResponse{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCFServiceCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCFServiceCredentialsResponse) ProtoMessage() {}

func (x *GetCFServiceCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCFServiceCredentialsResponse.ProtoReflect.Descriptor instead.
func (*GetCFServiceCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{5}
}

func (x *GetCFServiceCredentialsResponse) GetPubKeyId() string {
	if x != nil {
		return x.PubKeyId
	}
	return ""
}

func (x *GetCFServiceCredentialsResponse) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

// Request to detach a Lightbits cluster from the CF service.
// After detaching the cluster, it is recommended to remove the CF credentials that were added to the Lightbits cluster,
// by issuing the "lbcli delete credential command".
type DetachClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the cluster to detach from the CF service (must be a valid UUID).
	Cid           string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachClusterRequest) Reset() {
	*x = DetachClusterRequest{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachClusterRequest) ProtoMessage() {}

func (x *DetachClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachClusterRequest.ProtoReflect.Descriptor instead.
func (*DetachClusterRequest) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{6}
}

func (x *DetachClusterRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

// Response to detach a Lightbits cluster from the CF service.
type DetachClusterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachClusterResponse) Reset() {
	*x = DetachClusterResponse{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachClusterResponse) ProtoMessage() {}

func (x *DetachClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachClusterResponse.ProtoReflect.Descriptor instead.
func (*DetachClusterResponse) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{7}
}

// Information about a Lightbits cluster connected to the CF service.
type Cluster struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The UUID of the cluster. Must be a valid UUID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the cluster.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The minimum version of the Lightbits release on the cluster.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// The NQN of the subsystem of the cluster.
	SubsystemNqn string `protobuf:"bytes,4,opt,name=subsystemNqn,proto3" json:"subsystemNqn,omitempty"`
	// The list of API endpoints of the cluster.
	ApiEndpoints []string `protobuf:"bytes,5,rep,name=apiEndpoints,proto3" json:"apiEndpoints,omitempty"`
	// The list of discovery endpoints of the cluster.
	DiscoveryEndpoints      []string                         `protobuf:"bytes,6,rep,name=discoveryEndpoints,proto3" json:"discoveryEndpoints,omitempty"`
	ClusterConnectionStatus *Cluster_ClusterConnectionStatus `protobuf:"bytes,9,opt,name=clusterConnectionStatus,proto3" json:"clusterConnectionStatus,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{8}
}

func (x *Cluster) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cluster) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Cluster) GetSubsystemNqn() string {
	if x != nil {
		return x.SubsystemNqn
	}
	return ""
}

func (x *Cluster) GetApiEndpoints() []string {
	if x != nil {
		return x.ApiEndpoints
	}
	return nil
}

func (x *Cluster) GetDiscoveryEndpoints() []string {
	if x != nil {
		return x.DiscoveryEndpoints
	}
	return nil
}

func (x *Cluster) GetClusterConnectionStatus() *Cluster_ClusterConnectionStatus {
	if x != nil {
		return x.ClusterConnectionStatus
	}
	return nil
}

// List Clusters Request
//
// Request to list the Lightbits clusters connected to the CF service.
type ListClustersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersRequest) Reset() {
	*x = ListClustersRequest{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest) ProtoMessage() {}

func (x *ListClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest.ProtoReflect.Descriptor instead.
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{9}
}

// List Clusters Response
//
// The response to list the Lightbits clusters connected to the CF service.
type ListClustersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clusters      []*Cluster             `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersResponse) Reset() {
	*x = ListClustersResponse{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResponse) ProtoMessage() {}

func (x *ListClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResponse.ProtoReflect.Descriptor instead.
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{10}
}

func (x *ListClustersResponse) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

// Progress information
//
// The progress information of a workflow.
type Progress struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The percentage of the workflow that has been completed.
	Percent int32 `protobuf:"varint,1,opt,name=percent,proto3" json:"percent,omitempty"`
	// The current stage of the workflow.
	Stage         string `protobuf:"bytes,2,opt,name=stage,proto3" json:"stage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Progress) Reset() {
	*x = Progress{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Progress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Progress) ProtoMessage() {}

func (x *Progress) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Progress.ProtoReflect.Descriptor instead.
func (*Progress) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{11}
}

func (x *Progress) GetPercent() int32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *Progress) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

// Workflow information.
type Workflow struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The UUID of the workflow.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The time the workflow was created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// The time the workflow started.
	StartedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	// The time the workflow completed.
	EndedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=endedAt,proto3" json:"endedAt,omitempty"`
	// The type of workflow (e.g. attach cluster).
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// The state of the workflow.
	State string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	// A detailed message providing additional information on the workflow state. This is mainly used in case of failure.
	Msg string `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`
	// Progress information of the workflow.
	Progress *Progress `protobuf:"bytes,8,opt,name=progress,proto3" json:"progress,omitempty"`
	// Types that are valid to be assigned to Input:
	//
	//	*Workflow_AttachClusterRequest
	Input         isWorkflow_Input `protobuf_oneof:"input"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{12}
}

func (x *Workflow) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Workflow) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Workflow) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *Workflow) GetEndedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndedAt
	}
	return nil
}

func (x *Workflow) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Workflow) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Workflow) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Workflow) GetProgress() *Progress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *Workflow) GetInput() isWorkflow_Input {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *Workflow) GetAttachClusterRequest() *AttachClusterRequest {
	if x != nil {
		if x, ok := x.Input.(*Workflow_AttachClusterRequest); ok {
			return x.AttachClusterRequest
		}
	}
	return nil
}

type isWorkflow_Input interface {
	isWorkflow_Input()
}

type Workflow_AttachClusterRequest struct {
	AttachClusterRequest *AttachClusterRequest `protobuf:"bytes,9,opt,name=attachClusterRequest,proto3,oneof"` // Use a number not already used above
}

func (*Workflow_AttachClusterRequest) isWorkflow_Input() {}

// Request to get a workflow by its ID.
type GetWorkflowRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the workflow.
	WorkflowId    string `protobuf:"bytes,1,opt,name=workflowId,proto3" json:"workflowId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowRequest) Reset() {
	*x = GetWorkflowRequest{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowRequest) ProtoMessage() {}

func (x *GetWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{13}
}

func (x *GetWorkflowRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

// Get Workflow Response
//
// The response to get a workflow by its ID.
type GetWorkflowResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The workflow information.
	Workflow      *Workflow `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowResponse) Reset() {
	*x = GetWorkflowResponse{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowResponse) ProtoMessage() {}

func (x *GetWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{14}
}

func (x *GetWorkflowResponse) GetWorkflow() *Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

// List Workflows Request
type ListWorkflowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	NextPageToken *wrapperspb.BytesValue `protobuf:"bytes,2,opt,name=nextPageToken,proto3" json:"nextPageToken,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowsRequest) Reset() {
	*x = ListWorkflowsRequest{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsRequest) ProtoMessage() {}

func (x *ListWorkflowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowsRequest) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{15}
}

func (x *ListWorkflowsRequest) GetPageSize() *wrapperspb.Int32Value {
	if x != nil {
		return x.PageSize
	}
	return nil
}

func (x *ListWorkflowsRequest) GetNextPageToken() *wrapperspb.BytesValue {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

// List Workflows Response
//
// The response to list the workflows.
// Note that the initial CF service will only return the last 100 workflows.
type ListWorkflowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflows     []*Workflow            `protobuf:"bytes,1,rep,name=workflows,proto3" json:"workflows,omitempty"`
	NextPageToken []byte                 `protobuf:"bytes,2,opt,name=nextPageToken,proto3" json:"nextPageToken,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowsResponse) Reset() {
	*x = ListWorkflowsResponse{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsResponse) ProtoMessage() {}

func (x *ListWorkflowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsResponse.ProtoReflect.Descriptor instead.
func (*ListWorkflowsResponse) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{16}
}

func (x *ListWorkflowsResponse) GetWorkflows() []*Workflow {
	if x != nil {
		return x.Workflows
	}
	return nil
}

func (x *ListWorkflowsResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

// The connection status of the cluster.
type Cluster_ClusterConnectionStatus struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	AccessConnectionStatus Cluster_ClusterStatus  `protobuf:"varint,1,opt,name=accessConnectionStatus,proto3,enum=lightbits.api.duros.v2.Cluster_ClusterStatus" json:"accessConnectionStatus,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Cluster_ClusterConnectionStatus) Reset() {
	*x = Cluster_ClusterConnectionStatus{}
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cluster_ClusterConnectionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster_ClusterConnectionStatus) ProtoMessage() {}

func (x *Cluster_ClusterConnectionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_lightbits_api_duros_v2_cf_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster_ClusterConnectionStatus.ProtoReflect.Descriptor instead.
func (*Cluster_ClusterConnectionStatus) Descriptor() ([]byte, []int) {
	return file_lightbits_api_duros_v2_cf_proto_rawDescGZIP(), []int{8, 0}
}

func (x *Cluster_ClusterConnectionStatus) GetAccessConnectionStatus() Cluster_ClusterStatus {
	if x != nil {
		return x.AccessConnectionStatus
	}
	return Cluster_Connected
}

var File_lightbits_api_duros_v2_cf_proto protoreflect.FileDescriptor

const file_lightbits_api_duros_v2_cf_proto_rawDesc = "" +
	"\n" +
	"\x1flightbits/api/duros/v2/cf.proto\x12\x16lightbits.api.duros.v2\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a9grpc/gateway/protoc_gen_swagger/options/annotations.proto\"\x10\n" +
	"\x0eCFLoginRequest\"g\n" +
	"\x0fCFLoginResponse\x12\x1c\n" +
	"\ttokenType\x18\x01 \x01(\tR\ttokenType\x12\x1c\n" +
	"\texpiresIn\x18\x02 \x01(\x04R\texpiresIn\x12\x18\n" +
	"\aidToken\x18\x03 \x01(\tR\aidToken\"8\n" +
	"\x14AttachClusterRequest\x12 \n" +
	"\vapiEndpoint\x18\x01 \x01(\tR\vapiEndpoint\"7\n" +
	"\x15AttachClusterResponse\x12\x1e\n" +
	"\n" +
	"workflowId\x18\x01 \x01(\tR\n" +
	"workflowId\" \n" +
	"\x1eGetCFServiceCredentialsRequest\"U\n" +
	"\x1fGetCFServiceCredentialsResponse\x12\x1a\n" +
	"\bpubKeyId\x18\x01 \x01(\tR\bpubKeyId\x12\x16\n" +
	"\x06pubKey\x18\x02 \x01(\tR\x06pubKey\"(\n" +
	"\x14DetachClusterRequest\x12\x10\n" +
	"\x03cid\x18\x01 \x01(\tR\x03cid\"\x17\n" +
	"\x15DetachClusterResponse\"\xf9\x03\n" +
	"\aCluster\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\"\n" +
	"\fsubsystemNqn\x18\x04 \x01(\tR\fsubsystemNqn\x12\"\n" +
	"\fapiEndpoints\x18\x05 \x03(\tR\fapiEndpoints\x12.\n" +
	"\x12discoveryEndpoints\x18\x06 \x03(\tR\x12discoveryEndpoints\x12q\n" +
	"\x17clusterConnectionStatus\x18\t \x01(\v27.lightbits.api.duros.v2.Cluster.ClusterConnectionStatusR\x17clusterConnectionStatus\x1a\x80\x01\n" +
	"\x17ClusterConnectionStatus\x12e\n" +
	"\x16accessConnectionStatus\x18\x01 \x01(\x0e2-.lightbits.api.duros.v2.Cluster.ClusterStatusR\x16accessConnectionStatus\"B\n" +
	"\rClusterStatus\x12\r\n" +
	"\tConnected\x10\x00\x12\x10\n" +
	"\fDisconnected\x10\x01\x12\x10\n" +
	"\fUnauthorized\x10\x02\"\x15\n" +
	"\x13ListClustersRequest\"S\n" +
	"\x14ListClustersResponse\x12;\n" +
	"\bclusters\x18\x01 \x03(\v2\x1f.lightbits.api.duros.v2.ClusterR\bclusters\":\n" +
	"\bProgress\x12\x18\n" +
	"\apercent\x18\x01 \x01(\x05R\apercent\x12\x14\n" +
	"\x05stage\x18\x02 \x01(\tR\x05stage\"\xf1\x03\n" +
	"\bWorkflow\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\tcreatedAt\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x128\n" +
	"\tstartedAt\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x124\n" +
	"\aendedAt\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendedAt\x12\x12\n" +
	"\x04type\x18\x05 \x01(\tR\x04type\x12\x14\n" +
	"\x05state\x18\x06 \x01(\tR\x05state\x12\x10\n" +
	"\x03msg\x18\a \x01(\tR\x03msg\x12<\n" +
	"\bprogress\x18\b \x01(\v2 .lightbits.api.duros.v2.ProgressR\bprogress\x12b\n" +
	"\x14attachClusterRequest\x18\t \x01(\v2,.lightbits.api.duros.v2.AttachClusterRequestH\x00R\x14attachClusterRequest\"D\n" +
	"\rWorkflowState\x12\v\n" +
	"\aPENDING\x10\x00\x12\v\n" +
	"\aRUNNING\x10\x01\x12\r\n" +
	"\tCOMPLETED\x10\x02\x12\n" +
	"\n" +
	"\x06FAILED\x10\x03B\a\n" +
	"\x05input\"\x96\x01\n" +
	"\x12GetWorkflowRequest\x12_\n" +
	"\n" +
	"workflowId\x18\x01 \x01(\tB?\x92A<2\x12Workflow ID to getJ&\"2473253a-86e6-11ef-8751-2beef763dee3\"R\n" +
	"workflowId:\x1f\x92A\x1c\n" +
	"\x1a*\vWorkflow ID\xd2\x01\n" +
	"workflowId\"S\n" +
	"\x13GetWorkflowResponse\x12<\n" +
	"\bworkflow\x18\x01 \x01(\v2 .lightbits.api.duros.v2.WorkflowR\bworkflow\"\x92\x01\n" +
	"\x14ListWorkflowsRequest\x127\n" +
	"\bpageSize\x18\x01 \x01(\v2\x1b.google.protobuf.Int32ValueR\bpageSize\x12A\n" +
	"\rnextPageToken\x18\x02 \x01(\v2\x1b.google.protobuf.BytesValueR\rnextPageToken\"}\n" +
	"\x15ListWorkflowsResponse\x12>\n" +
	"\tworkflows\x18\x01 \x03(\v2 .lightbits.api.duros.v2.WorkflowR\tworkflows\x12$\n" +
	"\rnextPageToken\x18\x02 \x01(\fR\rnextPageTokenB\rZ\vduros/v2;v2b\x06proto3"

var (
	file_lightbits_api_duros_v2_cf_proto_rawDescOnce sync.Once
	file_lightbits_api_duros_v2_cf_proto_rawDescData []byte
)

func file_lightbits_api_duros_v2_cf_proto_rawDescGZIP() []byte {
	file_lightbits_api_duros_v2_cf_proto_rawDescOnce.Do(func() {
		file_lightbits_api_duros_v2_cf_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lightbits_api_duros_v2_cf_proto_rawDesc), len(file_lightbits_api_duros_v2_cf_proto_rawDesc)))
	})
	return file_lightbits_api_duros_v2_cf_proto_rawDescData
}

var file_lightbits_api_duros_v2_cf_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_lightbits_api_duros_v2_cf_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_lightbits_api_duros_v2_cf_proto_goTypes = []any{
	(Cluster_ClusterStatus)(0),              // 0: lightbits.api.duros.v2.Cluster.ClusterStatus
	(Workflow_WorkflowState)(0),             // 1: lightbits.api.duros.v2.Workflow.WorkflowState
	(*CFLoginRequest)(nil),                  // 2: lightbits.api.duros.v2.CFLoginRequest
	(*CFLoginResponse)(nil),                 // 3: lightbits.api.duros.v2.CFLoginResponse
	(*AttachClusterRequest)(nil),            // 4: lightbits.api.duros.v2.AttachClusterRequest
	(*AttachClusterResponse)(nil),           // 5: lightbits.api.duros.v2.AttachClusterResponse
	(*GetCFServiceCredentialsRequest)(nil),  // 6: lightbits.api.duros.v2.GetCFServiceCredentialsRequest
	(*GetCFServiceCredentialsResponse)(nil), // 7: lightbits.api.duros.v2.GetCFServiceCredentialsResponse
	(*DetachClusterRequest)(nil),            // 8: lightbits.api.duros.v2.DetachClusterRequest
	(*DetachClusterResponse)(nil),           // 9: lightbits.api.duros.v2.DetachClusterResponse
	(*Cluster)(nil),                         // 10: lightbits.api.duros.v2.Cluster
	(*ListClustersRequest)(nil),             // 11: lightbits.api.duros.v2.ListClustersRequest
	(*ListClustersResponse)(nil),            // 12: lightbits.api.duros.v2.ListClustersResponse
	(*Progress)(nil),                        // 13: lightbits.api.duros.v2.Progress
	(*Workflow)(nil),                        // 14: lightbits.api.duros.v2.Workflow
	(*GetWorkflowRequest)(nil),              // 15: lightbits.api.duros.v2.GetWorkflowRequest
	(*GetWorkflowResponse)(nil),             // 16: lightbits.api.duros.v2.GetWorkflowResponse
	(*ListWorkflowsRequest)(nil),            // 17: lightbits.api.duros.v2.ListWorkflowsRequest
	(*ListWorkflowsResponse)(nil),           // 18: lightbits.api.duros.v2.ListWorkflowsResponse
	(*Cluster_ClusterConnectionStatus)(nil), // 19: lightbits.api.duros.v2.Cluster.ClusterConnectionStatus
	(*timestamppb.Timestamp)(nil),           // 20: google.protobuf.Timestamp
	(*wrapperspb.Int32Value)(nil),           // 21: google.protobuf.Int32Value
	(*wrapperspb.BytesValue)(nil),           // 22: google.protobuf.BytesValue
}
var file_lightbits_api_duros_v2_cf_proto_depIdxs = []int32{
	19, // 0: lightbits.api.duros.v2.Cluster.clusterConnectionStatus:type_name -> lightbits.api.duros.v2.Cluster.ClusterConnectionStatus
	10, // 1: lightbits.api.duros.v2.ListClustersResponse.clusters:type_name -> lightbits.api.duros.v2.Cluster
	20, // 2: lightbits.api.duros.v2.Workflow.createdAt:type_name -> google.protobuf.Timestamp
	20, // 3: lightbits.api.duros.v2.Workflow.startedAt:type_name -> google.protobuf.Timestamp
	20, // 4: lightbits.api.duros.v2.Workflow.endedAt:type_name -> google.protobuf.Timestamp
	13, // 5: lightbits.api.duros.v2.Workflow.progress:type_name -> lightbits.api.duros.v2.Progress
	4,  // 6: lightbits.api.duros.v2.Workflow.attachClusterRequest:type_name -> lightbits.api.duros.v2.AttachClusterRequest
	14, // 7: lightbits.api.duros.v2.GetWorkflowResponse.workflow:type_name -> lightbits.api.duros.v2.Workflow
	21, // 8: lightbits.api.duros.v2.ListWorkflowsRequest.pageSize:type_name -> google.protobuf.Int32Value
	22, // 9: lightbits.api.duros.v2.ListWorkflowsRequest.nextPageToken:type_name -> google.protobuf.BytesValue
	14, // 10: lightbits.api.duros.v2.ListWorkflowsResponse.workflows:type_name -> lightbits.api.duros.v2.Workflow
	0,  // 11: lightbits.api.duros.v2.Cluster.ClusterConnectionStatus.accessConnectionStatus:type_name -> lightbits.api.duros.v2.Cluster.ClusterStatus
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_lightbits_api_duros_v2_cf_proto_init() }
func file_lightbits_api_duros_v2_cf_proto_init() {
	if File_lightbits_api_duros_v2_cf_proto != nil {
		return
	}
	file_lightbits_api_duros_v2_cf_proto_msgTypes[12].OneofWrappers = []any{
		(*Workflow_AttachClusterRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lightbits_api_duros_v2_cf_proto_rawDesc), len(file_lightbits_api_duros_v2_cf_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lightbits_api_duros_v2_cf_proto_goTypes,
		DependencyIndexes: file_lightbits_api_duros_v2_cf_proto_depIdxs,
		EnumInfos:         file_lightbits_api_duros_v2_cf_proto_enumTypes,
		MessageInfos:      file_lightbits_api_duros_v2_cf_proto_msgTypes,
	}.Build()
	File_lightbits_api_duros_v2_cf_proto = out.File
	file_lightbits_api_duros_v2_cf_proto_goTypes = nil
	file_lightbits_api_duros_v2_cf_proto_depIdxs = nil
}
